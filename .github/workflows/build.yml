name: Build and Release

on:
  push:
    branches:
      - main 

permissions: 
  contents: write # Required to create releases

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup C Compiler 
        uses:  actions/setup-c-tools@v3
        with:
          c-compiler: gcc  # Or use 'clang' if you prefer
          c-compiler-version: '11' # Specify the desired GCC/Clang version 

      - name: Build for ${{ matrix.os }}
        run: |
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            gcc -o vtttosrt.exe src/vtttosrt.c 
          else
            gcc -o vtttosrt src/vtttosrt.c 
          fi
        
      - name: Create Release Directory
        run: mkdir -p release

      - name: Move Artifacts to Release
        run: |
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            mv vtttosrt.exe ./release/vtttosrt-${{ matrix.os }}.exe 
          else
            mv vtttosrt ./release/vtttosrt-${{ matrix.os }}
          fi 

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: release-${{ github.sha }} 
          path: ./release
          retention-days: 7 

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Ubuntu Artifact
        uses: actions/download-artifact@v3
        with:
          name: release-${{ github.sha }} 
          path: artifacts/ubuntu-latest 
      - name: Download macOS Artifact
        uses: actions/download-artifact@v3
        with:
          name: release-${{ github.sha }}
          path: artifacts/macos-latest
      - name: Download Windows Artifact
        uses: actions/download-artifact@v3
        with:
          name: release-${{ github.sha }}
          path: artifacts/windows-latest

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/ubuntu-latest/vtttosrt-ubuntu-latest 
            artifacts/macos-latest/vtttosrt-macos-latest
            artifacts/windows-latest/vtttosrt-windows-latest.exe
          tag_name: v${{ github.sha }}
          name: Release v${{ github.sha }}
          body: "Binaries built from commit `${{ github.sha }}`."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 