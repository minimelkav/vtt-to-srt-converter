name: Build and Release

permissions:
  contents: write  # Give the workflow permission to create releases

on:
  push:
    branches: 
      - main  # Only trigger on pushes to the "main" branch
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up C compiler
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get install gcc

    - name: Set up C compiler
      if: matrix.os == 'macos-latest'
      run: brew install gcc

    - name: Set up C compiler
      if: matrix.os == 'windows-latest'
      uses: chrislennon/action-setup-msvc@v1

    - name: Compile the program
      run: |
        gcc -o vtttosrt vtttosrt.c
      shell: bash

    - name: Create artifact directory
      run: mkdir -p artifacts/${{ matrix.os }}

    - name: Move binary to artifact directory
      run: mv vtttosrt artifacts/${{ matrix.os }}/vtttosrt${{ matrix.os == 'windows-latest' && '.exe' || '' }}

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: vtttosrt-${{ matrix.os }}
        path: artifacts/${{ matrix.os }}/vtttosrt${{ matrix.os == 'windows-latest' && '.exe' || '' }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Download artifacts
      uses: actions/download-artifact@v2
      with:
        name: vtttosrt-ubuntu-latest
        path: artifacts/ubuntu-latest
    - uses: actions/download-artifact@v2
      with:
        name: vtttosrt-macos-latest
        path: artifacts/macos-latest
    - uses: actions/download-artifact@v2
      with:
        name: vtttosrt-windows-latest
        path: artifacts/windows-latest

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/ubuntu-latest/vtttosrt
          artifacts/macos-latest/vtttosrt
          artifacts/windows-latest/vtttosrt.exe
        tag_name: v${{ github.sha }}
        name: Release v${{ github.sha }}
        body: "Binaries built from commit `${{ github.sha }}`."
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
